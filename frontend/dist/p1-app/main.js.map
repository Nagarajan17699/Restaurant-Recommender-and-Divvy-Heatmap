{"version":3,"file":"main.js","mappings":"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":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/divvy-heat-map/heat-map.component.ts","./src/app/components/divvy-heat-map/heat-map.component.html","./src/app/components/divvy-trips-chart/divvy-trips-chart.component.ts","./src/app/components/divvy-trips-chart/divvy-trips-chart.component.html","./src/app/components/find/find.component.ts","./src/app/components/find/find.component.html","./src/app/components/list-of-places/list-of-places.component.ts","./src/app/components/list-of-places/list-of-places.component.html","./src/app/components/list-of-stations/list-of-stations.component.ts","./src/app/components/list-of-stations/list-of-stations.component.html","./src/app/components/real-time-line-chart/real-time-line-chart.component.ts","./src/app/components/real-time-line-chart/real-time-line-chart.component.html","./src/app/components/real-time-sma-line-chart/real-time-sma-line-chart.component.ts","./src/app/components/yelp-reviews-chart/yelp-reviews-bar-chart.component.ts","./src/app/components/yelp-reviews-chart/yelp-reviews-bar-chart.component.html","./src/app/places.service.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private router: Router) { }\n\n  title = 'ChicagoSocialHub-app';\n  registerView;\n\n  callHomePage(){\n    console.log(\"called find\");\n    this.registerView=\"regView2\";\n    this.router.navigate(['/find']);\n  }\n}\n","<mat-toolbar text-align=center (click)=\"callHomePage()\">\n  <span> Chicago Social Hub </span>\n  &nbsp; &nbsp; &nbsp;\n\n  <mat-icon >restaurant</mat-icon>\n  <mat-icon >local_bar</mat-icon>\n  <mat-icon >local_cafe</mat-icon>\n\n\n  <span class=\"fill-remaining-space\"></span>\n\n</mat-toolbar>\n\n\n<div>\n  <router-outlet></router-outlet>\n</div>\n","////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n/// This file and the source code provided can be used only for\n/// the projects and assignments of this course\n\n/// Last Edit by Dr. Atef Bader: 1/30/2019\n\n\n////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AgmCoreModule, GoogleMapsAPIWrapper } from '@agm/core';\n\n\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { SatDatepickerModule, SatNativeDateModule } from 'saturn-datepicker';\n\n\nimport { PlacesService } from './places.service';\n\nimport { FindComponent } from './components/find/find.component';\nimport { ListOfPlacesComponent } from './components/list-of-places/list-of-places.component';\nimport { ListOfStationsComponent } from './components/list-of-stations/list-of-stations.component';\nimport {RealTimeLineComponent} from './components/real-time-line-chart/real-time-line-chart.component'\n\nimport { HeatMapComponent } from './components/divvy-heat-map/heat-map.component';\n\nimport { BarChartComponent } from './components/yelp-reviews-chart/yelp-reviews-bar-chart.component';\nimport { DivvyTripsChartComponent } from './components/divvy-trips-chart/divvy-trips-chart.component';\n\nimport { RealTimeSMALineComponent } from './components/real-time-sma-line-chart/real-time-sma-line-chart.component';\n\n\n\nconst routes: Routes = [\n  { path: 'find', component: FindComponent},\n  { path: 'list_of_places', component: ListOfPlacesComponent},\n  { path: 'list_of_stations', component: ListOfStationsComponent},\n  { path: 'realtime_line_chart', component: RealTimeLineComponent},\n  { path: 'heat_map', component: HeatMapComponent},\n  { path: 'yelp_reviews_chart', component: BarChartComponent},\n  { path: 'divvy_trips_chart', component: DivvyTripsChartComponent},\n  { path: 'sma_chart', component: RealTimeSMALineComponent},\n\n\n\n\n  { path: '', redirectTo: 'find', pathMatch: 'full'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FindComponent,\n    ListOfPlacesComponent,\n    ListOfStationsComponent,\n    RealTimeLineComponent,\n    HeatMapComponent,\n    RealTimeSMALineComponent,\n    BarChartComponent,\n    DivvyTripsChartComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }),\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatDividerModule,\n    MatSnackBarModule,\n    SatDatepickerModule,\n    SatNativeDateModule,\n\n\n\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////// SETUP NEEDED ////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////\n\n//  1. Create your API key from Google Developer Website\n//  2. Install AGM package: npm install @agm/core @ng-bootstrap/ng-bootstrap --\n//  3. Here is the URL for an online IDE for NG and TS that could be used to experiment\n//  4. AGM live demo is loacted at this URL: https://stackblitz.com/edit/angular-google-maps-demo\n\n\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////\n\n\n    AgmCoreModule.forRoot({apiKey: 'ADD-YOUR-API-KEY-HERE'+ '&libraries=visualization'}),\n    FormsModule,\n    NgbModule,\n    MatCheckboxModule\n\n  ],\n\n  providers: [PlacesService, GoogleMapsAPIWrapper],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { AfterViewInit, Component,Input,ElementRef, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport * as heatmap from 'heatmap.js'\r\nimport { google } from 'google-maps';\r\n\r\nimport { Station } from '../../station';\r\nimport { PlacesService } from '../../places.service';\r\nimport { Observable } from \"rxjs\";\r\nimport 'rxjs/add/observable/interval';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport * as moment from 'moment';\r\n\r\ninterface Location {\r\n  lat: number;\r\n  lng: number;\r\n  zoom: number;\r\n  address_level_1?:string;\r\n  address_level_2?: string;\r\n  address_country?: string;\r\n  address_zip?: string;\r\n  address_state?: string;\r\n  label: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'heatmap',\r\n  templateUrl: './heat-map.component.html',\r\n  styleUrls: ['./heat-map.component.scss']\r\n})\r\n\r\n\r\nexport class HeatMapComponent implements OnInit{\r\n\r\n    // The following are tunable parameters that are used to display n samples\r\n    // of divvy data on the heatMap\r\n\r\n    FRAMES_PER_HOUR = 30;\r\n    FRAMES_PER_DAY = 24;\r\n    FRAMES_PER_WEEK = 7;\r\n\r\n    PAST_HOUR =  'Past Hour';\r\n    PAST_24_HOURS =  'Last 24 Hours';\r\n    PAST_7_DAYS =  'Last 7 Days';\r\n\r\n    newTimeRangeSelection = true;\r\n    notNewTimeRangeSelection = false;\r\n\r\n    timeRangeSelected = this.PAST_HOUR;\r\n\r\n    google: google;\r\n    gradient;\r\n    gradientStep = -1;\r\n    newGradient;\r\n    distinct = [];\r\n    stations:Station[];\r\n    heatMapData: any[];\r\n    timeArray:any;\r\n    timeOffset = 0;\r\n    timer;\r\n\r\n    noOfDivvyDataSamplesRequested: number;\r\n    noOfDivvyDataSamplesProcessed: number;\r\n\r\n    currentChicagoTime;\r\n\r\n    timeStamp;\r\n    currentTime;\r\n\r\n    timeValues = [\r\n      { id : this.PAST_HOUR, value: this.PAST_HOUR},\r\n      { id : this.PAST_24_HOURS, value: this.PAST_24_HOURS},\r\n      { id : this.PAST_7_DAYS, value: this.PAST_7_DAYS}\r\n    ];\r\n\r\n    private map: google.maps.Map = null;\r\n    heatmap: google.maps.visualization.HeatmapLayer = null;\r\n\r\n\r\n    constructor(private placesService:PlacesService) {\r\n\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n      this.timeRangeSelected = this.PAST_HOUR;\r\n      this.noOfDivvyDataSamplesProcessed=2;\r\n    }\r\n\r\n\r\n\r\n\r\n  \r\n//////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////   Angular Callback for TimeRangeSelection\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n  changeTimeRangeSelected(data){\r\n    //console.log('this.timeRangeSelected', this.timeRangeSelected);\r\n    this.clearHeatMap();\r\n    this.noOfDivvyDataSamplesProcessed = 0;\r\n    clearTimeout(this.timer);\r\n    this.getDivvyStationsStatus(this.newTimeRangeSelection);\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  \r\n\r\n  //////////////////////////////////////////////////////\r\n  //////////////////////////////////////////////////////\r\n  // A function used to prefix a single digit with a ZERO\r\n\r\n\r\n  checkForSingleDigitAndPrefixZeroIfNeeded(digitValue) {\r\n\r\n    if (digitValue < 10) \r\n      digitValue = \"0\" + digitValue;\r\n    \r\n    return digitValue;\r\n  }\r\n\r\n\r\n\r\n  ///////////////////////////////////////////////////////////\r\n  ///////////////////////////////////////////////////////////\r\n\r\n  getDivvyStationsStatus(timeRangeSelection){\r\n\r\n    \r\n    // The algorithm to collect log data for Divvy stations as follows:\r\n    // Get current time and then rewind backward in time based on the time selection\r\n    // 1 Hour  time selection     :  -60 * 60 * 1000 seconds\r\n    // 24 hours  time selection   :  24 * -60 * 60 * 1000 seconds\r\n    // 7 days time selection      :   7 * 24 * -60 * 60 * 1000 seconds\r\n\r\n    // this is the time used to be displayed as label on the map\r\n    var simulatedClockTime;\r\n    var currentTime= new Date();\r\n\r\n    var startTimeForDataCollection ;\r\n    var currentTimeForDataCollection ;\r\n\r\n\r\n\r\n    // What is the time-range selected? 1-Hour, 24-Hours, 7-days?\r\n    // Based on the time-range selected we specify how many animation frames to display on th eheatmap \r\n    // for the Divvy logs collected from ElasticSearch\r\n    // every data sample is displayed as a frame on the heatmap\r\n\r\n    if (this.timeRangeSelected == this.PAST_HOUR){\r\n      this.noOfDivvyDataSamplesRequested = this.FRAMES_PER_HOUR;\r\n      startTimeForDataCollection = new Date(currentTime.getTime()-60 * 60 * 1000);\r\n      currentTimeForDataCollection = new Date(startTimeForDataCollection.getTime()+this.timeOffset);\r\n    } \r\n\r\n\r\n\r\n    /////////////////////////////////////////////////////\r\n    /////////////////////////////////////////////////////\r\n\r\n\r\n    /////////////     ADD YOUR CODE HERE      ///////////\r\n    \r\n    // Write your code to extend the above if statement with else block to handle\r\n    //          timeRangeSelected == this.PAST_24_HOURS\r\n    //          noOfDivvyDataSamplesRequested = this.FRAMES_PER_DAY\r\n    // And\r\n    //          timeRangeSelected == this.PAST_7_DAYS\r\n    //          noOfDivvyDataSamplesRequested = this.FRAMES_PER_WEEK\r\n\r\n\r\n    // The following are fine-tunable parameters \r\n    // They are used to specify how many data samples (Divvy heart-beats per Time-Unit)\r\n    //      FRAMES_PER_HOUR = 30;\r\n    //      FRAMES_PER_DAY = 24;\r\n    //      FRAMES_PER_WEEK = 7;\r\n\r\n    /////////////////////////////////////////////////////\r\n    /////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //console.log('this.noOfDivvyDataSamplesRequested = ', this.noOfDivvyDataSamplesRequested);\r\n    //console.log('startTimeForDataCollection= ', startTimeForDataCollection);\r\n    //console.log('currentTimeForDataCollection= ', currentTimeForDataCollection);\r\n    //console.log('this.timeRangeSelected = ', this.timeRangeSelected);\r\n\r\n\r\n\r\n    // Check to see if we collected the REQUESTED number of samples from Divvy logs on ElasticSearch\r\n    // For example, for the past hour we collect 30 samples (2 minutes increments) and display 30 heatmap frames\r\n    // For example, for the past 24 hours we collect 24 samples (1 hour increments) and display 24 heatmap frames\r\n\r\n\r\n    if(this.noOfDivvyDataSamplesProcessed < this.noOfDivvyDataSamplesRequested){\r\n      this.placesService.get_all_divvy_stations_data(this.timeRangeSelected, timeRangeSelection).subscribe((data: Station[]) => {\r\n        //console.log('getDivvyStationsStatus -- noOfDivvyDataSamplesProcessed=', this.noOfDivvyDataSamplesProcessed);\r\n        this.noOfDivvyDataSamplesProcessed = this.noOfDivvyDataSamplesProcessed + 1;\r\n\r\n\r\n        // Adjust time Offset for the next cycle by 2 minutes\r\n        // for example: 2, 4, 6, 8, 10, ...\r\n        // So, current time is \r\n        if (this.timeRangeSelected == this.PAST_HOUR){\r\n          this.timeOffset = (this.noOfDivvyDataSamplesProcessed) * (60 * 1000 * 2);\r\n        } else \r\n                if (this.timeRangeSelected == this.PAST_24_HOURS){\r\n                  this.timeOffset = (this.noOfDivvyDataSamplesProcessed) * (60 * 60 * 1000);\r\n                } else \r\n                        if (this.timeRangeSelected == this.PAST_7_DAYS){\r\n                          this.timeOffset = (this.noOfDivvyDataSamplesProcessed) * (24 * 60 * 60 * 1000);\r\n                        }\r\n\r\n        // Create digital clock as label on the heatmap\r\n        // The convention is to prefix with ZERO the single digit for month, day, jour, minute, second\r\n        // in the digital clock/time\r\n\r\n        //The value returned by getMonth() is an integer between 0 and 11. \r\n        // 0 corresponds to January, 1 to February\r\n        currentTimeForDataCollection = new Date(startTimeForDataCollection.getTime()+this.timeOffset);\r\n        let monthNumber = this.checkForSingleDigitAndPrefixZeroIfNeeded(currentTimeForDataCollection.getMonth()+ 1) ;\r\n        simulatedClockTime = currentTimeForDataCollection.getFullYear() +'-'+ \r\n                              monthNumber + '-' +\r\n                              this.checkForSingleDigitAndPrefixZeroIfNeeded(currentTimeForDataCollection.getDate()) + '\\t' +\r\n                              this.checkForSingleDigitAndPrefixZeroIfNeeded(currentTimeForDataCollection.getHours()) + ':' +\r\n                              this.checkForSingleDigitAndPrefixZeroIfNeeded(currentTimeForDataCollection.getMinutes()) + ':' +\r\n                              this.checkForSingleDigitAndPrefixZeroIfNeeded(currentTimeForDataCollection.getSeconds());\r\n\r\n        this.timeStamp = simulatedClockTime;\r\n\r\n\r\n\r\n        // Now clear the HeatMap and then plot the data on the heatmap\r\n        this.clearHeatMap();\r\n        this.plot_availableDocksInDivvyStations_on_heatMap(data);\r\n        \r\n\r\n        // Not a new time-range selection, so continue calling the same method but \r\n        // with new time offset increment\r\n        this.timer = setTimeout(() =>  this.getDivvyStationsStatus(this.notNewTimeRangeSelection) , 300);\r\n      });\r\n    }\r\n\r\n    // we are done ... reset time offset to zero\r\n    this.timeOffset = 0;\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////\r\n  ///////////////////////////////////////////////////////////\r\n\r\n  plot_availableDocksInDivvyStations_on_heatMap(availableDocksInDivvyStations){\r\n\r\n    let locationsOfAvailableDocksInDivvyStations=[];\r\n\r\n    this.stations = availableDocksInDivvyStations;\r\n    //console.log(\"data\",this.stations.length);\r\n\r\n    for (let i = 0; i < this.stations.length; i++) {\r\n      let divvy_dock_station_location = {\r\n        location: new google.maps.LatLng(this.stations[i].latitude, this.stations[i].longitude),\r\n        weight: this.stations[i].availableDocks\r\n      }\r\n      locationsOfAvailableDocksInDivvyStations.push(divvy_dock_station_location);\r\n    }\r\n\r\n    this.heatMapData = locationsOfAvailableDocksInDivvyStations;\r\n\r\n    this.heatmap = new google.maps.visualization.HeatmapLayer({\r\n      data: this.heatMapData\r\n    });\r\n\r\n    this.heatmap.setMap(this.map);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  ////////////////////////////////////////////////////////////////////////////////\r\n  ////////////////////////////////////////////////////////////////////////////////\r\n\r\n  public location:Location = {\r\n    lat: 41.882607,\r\n    lng: -87.643548,\r\n    label: 'You are Here',\r\n    zoom: 10\r\n  };\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////\r\n\r\n  onMapLoad(mapInstance: google.maps.Map) {\r\n    // default display is Past Hour data\r\n    this.timeRangeSelected = this.PAST_HOUR;\r\n\r\n    this.map = mapInstance;\r\n\r\n    this.getDivvyStationsStatus(true);\r\n\r\n  }\r\n\r\n\r\n  clearHeatMap(){\r\n    if(this.heatmap){\r\n      this.heatmap.setMap(null);\r\n      this.heatMapData =[];\r\n    }\r\n\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n\r\n      this.map  = null;\r\n      this.heatmap = null;\r\n         \r\n  }\r\n\r\n}\r\n\r\n","<div>\n    <br>\n    <mat-card>\n\n      <button mat-raised-button color=\"primary\" routerLink=\"/list_of_stations\" style=\"float: right;\">\n      Go Back\n      &nbsp; &nbsp; &nbsp;\n      <mat-icon>keyboard_backspace</mat-icon>\n      </button>\n        &nbsp; &nbsp; &nbsp;\n\n      <br><br>\n      <mat-form-field>\n\n\n         <mat-select placeholder=\"Time Range:\"  [(ngModel)]=\"timeRangeSelected\" (ngModelChange)=\"changeTimeRangeSelected($event.value)\">\n           <mat-option *ngFor=\"let timeValue of timeValues\" [value]=\"timeValue.id\">\n             {{timeValue.value}}\n           </mat-option>\n         </mat-select>\n\n      </mat-form-field>\n      <mat-divider></mat-divider>\n      <br>\n       <div id=\"floating-panel\">\n         {{timeStamp}}\n         </div>\n      <agm-map  [(latitude)]=\"location.lat\" [(longitude)]=\"location.lng\" [(zoom)]=\"location.zoom\" [disableDefaultUI]=\"true\" [zoomControl]=\"true\" (mapReady)=\"onMapLoad($event)\" >\n  </agm-map>\n\n    </mat-card>\n  </div>\n","import { Component, OnInit ,Input,Output,EventEmitter} from '@angular/core';\r\nimport * as moment from 'moment'\r\nimport * as d3 from 'd3';\r\nimport * as d3Scale from 'd3-scale';\r\nimport * as d3Array from 'd3-array';\r\nimport * as d3Axis from 'd3-axis';\r\n\r\nimport { divvyTripsCountPerDay } from '../../DivvyTripsCountPerDay';\r\nimport { PlacesService } from '../../places.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {UntypedFormBuilder, UntypedFormGroup} from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\nimport {NgbDateStruct, NgbCalendar} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-divvy-trips-chart',\r\n  templateUrl: './divvy-trips-chart.component.html',\r\n  styleUrls: ['./divvy-trips-chart.component.css']\r\n})\r\nexport class DivvyTripsChartComponent implements OnInit {\r\n\r\n  divvyTripsCounts: divvyTripsCountPerDay[]=[];\r\n\r\n  private margin = { top: 20, right: 100, bottom: 150, left: 100 };\r\n  private width: number;\r\n  private height: number;\r\n  private x: any;\r\n  private y: any;\r\n  private svg: any;\r\n  private g: any;\r\n  datepickerDisabled: any;\r\n  collectDays = [];\r\n\r\n  startDate;\r\n  endDate;\r\n  dates_of_week_days;\r\n\r\n  chart_1_name:string;\r\n  chart_2_name:string;\r\n  chart_3_name:string;\r\n  chart_4_name:string;\r\n  chart_5_name:string;\r\n  chart_6_name:string;\r\n  chart_7_name:string;\r\n\r\n\r\n  minDate: Date;\r\n  maxDate: Date;\r\n  date: Date;\r\n  form: UntypedFormGroup;\r\n\r\n\r\n  constructor(private placesService: PlacesService, private router: Router, private http: HttpClient,fb: UntypedFormBuilder) {\r\n    this.width = 900 - this.margin.left - this.margin.right;\r\n    this.height = 500 - this.margin.top - this.margin.bottom;\r\n    this.form = fb.group({\r\n      date: [{begin: new Date(2018, 9, 8), end: new Date(2018, 9, 14)}]\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n      // Default display is for first week of 2018 fourth quarter\r\n\r\n      this.minDate = new Date('10/01/2018');\r\n      this.maxDate = new Date('12/31/2018');\r\n      this.dates_of_week_days = this.getDates('2018-10-01','2018-10-07');\r\n      console.log(this.dates_of_week_days);\r\n   \r\n      for (var i = 0; i < this.dates_of_week_days.length; i++) {\r\n        var daydata = new Date(this.dates_of_week_days[i]).getDay()+1\r\n        if(daydata == 7){\r\n          daydata = 0;\r\n        }\r\n        this.getDivvyTripsCountsPerDay(daydata,new Date(this.dates_of_week_days[i]));\r\n      }\r\n\r\n      this.form.valueChanges.subscribe((res) =>{\r\n            console.log('this.form.valueChanges selected');\r\n            console.log('res.date.begin=', res.date.begin);\r\n            console.log('res.date.end=', res.date.end);\r\n            this.updateChart();\r\n            this.collectDays=[];\r\n            console.log(res);\r\n            this.startDate = new Date(res.date.begin);\r\n            this.endDate = new Date(res.date.end);\r\n            this.dates_of_week_days = this.getDates(this.startDate,this.endDate);\r\n            console.log(this.dates_of_week_days);\r\n            for (var i = 0; i < this.dates_of_week_days.length; i++) {\r\n              var daydata = new Date(this.dates_of_week_days[i]).getDay()+1\r\n              if(daydata == 7){\r\n                daydata = 0;\r\n              }\r\n            this.collectDays.push(daydata);\r\n            console.log(\"length\",this.collectDays.length);\r\n            if(this.collectDays.length > 7){\r\n              console.log(\"Select a week\");\r\n              console.log(\"datasliced\",this.collectDays.slice(-7).pop());\r\n            }else{\r\n              this.getDivvyTripsCountsPerDay(daydata,new Date(this.dates_of_week_days[i]));\r\n            }\r\n\r\n          }\r\n      });\r\n\r\n  }\r\n\r\n\r\n  getDivvyTripsCountsPerDay(day,selectedDate) {\r\n\r\n      this.placesService.getDivvyTripsCountsPerDay(day,selectedDate).subscribe(() => {\r\n          this.getDivvyTripsCounts(day);\r\n      });\r\n\r\n  }\r\n    \r\n  getDivvyTripsCounts(day) {\r\n\r\n        if(day == 0){\r\n          this.chart_7_name = 'Sunday';\r\n\r\n           this.placesService\r\n            .getDivvyTripsCountsForSunday()\r\n            .subscribe((data: divvyTripsCountPerDay[]) => {\r\n              this.divvyTripsCounts = data;\r\n              var id=\"#svg\"; \r\n              this.initSvg(id);\r\n              this.initAxis();\r\n              this.drawAxis();\r\n              this.updateChartBars(this.divvyTripsCounts);})\r\n        }\r\n\r\n        else if(day == 1){\r\n          this.chart_1_name = 'Monday';\r\n          this.placesService\r\n            .getDivvyTripsCountsForMonday()\r\n            .subscribe((data: divvyTripsCountPerDay[]) => {\r\n              this.divvyTripsCounts = data;\r\n              var id=\"#svg1\"; this.initSvg(id);\r\n              this.initAxis();\r\n              this.drawAxis();\r\n              this.updateChartBars(this.divvyTripsCounts);})\r\n        } else if(day == 2){\r\n          this.chart_2_name = 'Tuesday';\r\n          this.placesService\r\n            .getDivvyTripsCountsForTuesday()\r\n            .subscribe((data: divvyTripsCountPerDay[]) => {\r\n              this.divvyTripsCounts = data;\r\n              var id=\"#svg2\"; this.initSvg(id);\r\n              this.initAxis();\r\n              this.drawAxis();\r\n              this.updateChartBars(this.divvyTripsCounts);})\r\n        } \r\n\r\n\r\n    /////////////////////////////////////////////////////\r\n    /////////////////////////////////////////////////////\r\n\r\n\r\n    /////////////     ADD YOUR CODE HERE      ///////////\r\n    \r\n    // Extend the else if block above to add and plot the charts for\r\n    // Wednesday, Thursday, Friday, and Saturday\r\n    \r\n\r\n    /////////////////////////////////////////////////////\r\n    /////////////////////////////////////////////////////\r\n    \r\n\r\n  }\r\n\r\n  private initSvg(id) {\r\n        this.svg = d3.select(id);\r\n        this.width = +this.svg.attr('width') - this.margin.left - this.margin.right;\r\n        this.height = +this.svg.attr('height') - this.margin.top - this.margin.bottom;\r\n        this.g = this.svg.append('g')\r\n            .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')');\r\n  }\r\n\r\n\r\n  private initAxis() {\r\n      this.x = d3Scale.scaleBand().rangeRound([0, this.width]).padding(0.2);\r\n      this.y = d3.scaleLinear().range([this.height, 0]).domain([0, 100]);\r\n      this.x.domain(this.divvyTripsCounts.map((d) => d.hour_timestamp));\r\n      this.y.domain([0, d3Array.max(this.divvyTripsCounts, (d) => Number(d.total_trips))]).nice();\r\n  }\r\n\r\n\r\n  private drawAxis() {\r\n\r\n          this.g.append('g')\r\n              .attr('class', 'axis axis--x')\r\n              .attr('transform', 'translate(0,' + this.height + ')')\r\n              .call(d3Axis.axisBottom(this.x)\r\n              .ticks(d3.timeHour.every(1)))\r\n              .selectAll(\"text\")\r\n              .attr(\"y\", 0)\r\n              .attr(\"x\", 9)\r\n              .attr(\"dy\", \".35em\")\r\n              .attr(\"transform\", \"rotate(60)\")\r\n              .style(\"text-anchor\", \"start\");\r\n        \r\n          this.g.append('g')\r\n              .attr('class', 'axis axis--y')\r\n              .call(d3Axis.axisLeft(this.y).ticks(10))\r\n              .append(\"text\")\r\n              .attr(\"transform\", \"rotate(90)\")\r\n              .attr(\"y\", 6)\r\n              .attr(\"dy\", \"0.71em\")\r\n              .attr(\"text-anchor\", \"end\")\r\n              .text(\"Frequency\");\r\n\r\n          this.svg.append(\"text\")\r\n              .attr(\"x\", this.width / 2 + 80)\r\n              .attr(\"y\", this.height + 85)\r\n              .style(\"text-anchor\", \"middle\")\r\n              .text(\"\");\r\n\r\n          //text label for y axis\r\n          this.svg.append(\"text\")\r\n          .attr(\"transform\", \"rotate(-90)\")\r\n          .attr(\"y\", 58)\r\n          .attr(\"x\", 0 - (this.height / 2))\r\n          //.attr(\"dy\", \"1em\")\r\n          .style(\"text-anchor\", \"middle\")\r\n          .text(\"Divvy Trips\");\r\n  }\r\n\r\n\r\n  private updateChartBars(data){\r\n    // Remove existing Bars\r\n  \tvar bars = this.g.selectAll(\".bar\")\r\n  \t\t\t\t\t.remove()\r\n  \t\t\t\t\t.exit()\r\n  \t\t\t\t\t.data(data)\r\n\r\n  \t// Create new rectangle/bar\r\n    bars.enter().append('rect')\r\n    .attr('class', 'bar')\r\n    .attr('x', (d) => this.x(d.hour_timestamp) )\r\n    .attr('y', (d) => this.y(d.total_trips) )\r\n    .attr('width', this.x.bandwidth())\r\n    .attr('height', (d) => this.height - this.y(d.total_trips) );\r\n  }\r\n\r\n\r\n  \r\n  getDates(fromDate, toDate) {\r\n    var dates = [];\r\n    var startDate = moment(fromDate);\r\n    var endDate = moment(toDate);\r\n    while (startDate <= endDate) {\r\n        dates.push( moment(startDate).format('YYYY-MM-DD') )\r\n        startDate = moment(startDate).add(1, 'days');\r\n    }\r\n    return dates;\r\n  }\r\n\r\n  private updateChart(){\r\n     d3.select('#svg').select(\"g\").remove().exit();\r\n     d3.select('#svg1').select(\"g\").remove().exit();\r\n     d3.select('#svg2').select(\"g\").remove().exit();\r\n     d3.select('#svg3').select(\"g\").remove().exit();\r\n     d3.select('#svg4').select(\"g\").remove().exit();\r\n     d3.select('#svg5').select(\"g\").remove().exit();\r\n     d3.select('#svg6').select(\"g\").remove().exit();\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","<br>\r\n<button mat-raised-button color=\"primary\" routerLink=\"/list_of_stations\" style=\"float: right;margin-right:20px;\">\r\nGo Back\r\n&nbsp; &nbsp; &nbsp;\r\n<mat-icon>keyboard_backspace</mat-icon>\r\n</button>\r\n\r\n<form [formGroup]=\"form\" style=\"margin-left:40%;\">\r\n<section>\r\n          <mat-form-field>\r\n            <input matInput\r\n                   placeholder=\"Choose a week\"\r\n                   [satDatepicker]=\"picker2\"\r\n\r\n                   formControlName=\"date\"\r\n\r\n                   [min]=\"minDate\"\r\n                   [max]=\"maxDate\">\r\n\r\n                  <sat-datepicker [disabled]=\"datepickerDisabled\" #picker2 [rangeMode]=\"true\">\r\n                  </sat-datepicker>\r\n                  <sat-datepicker-toggle matSuffix [for]=\"picker2\"></sat-datepicker-toggle>\r\n\r\n        </mat-form-field>\r\n\r\n\r\n\r\n    </section>\r\n    </form>\r\n\r\n\r\n<div>\r\n\r\n  <svg width=\"500\" height=\"400\" id=\"svg1\" ><text x=\"250\" y=\"15\" fill=\"black\">{{chart_1_name}}</text></svg>\r\n\r\n  <svg width=\"500\" height=\"400\" id=\"svg2\" ><text x=\"250\" y=\"15\" fill=\"black\">{{chart_2_name}}</text></svg>\r\n\r\n  <svg width=\"500\" height=\"400\" id=\"svg3\" ><text x=\"250\" y=\"15\" fill=\"black\">{{chart_3_name}}</text></svg>\r\n\r\n  <svg width=\"500\" height=\"400\" id=\"svg4\" ><text x=\"250\" y=\"15\" fill=\"black\">{{chart_4_name}}</text></svg>\r\n\r\n  <svg width=\"500\" height=\"400\" id=\"svg5\" ><text x=\"250\" y=\"15\" fill=\"black\">{{chart_5_name}}</text></svg>\r\n\r\n  <svg width=\"500\" height=\"400\" id=\"svg6\" ><text x=\"250\" y=\"15\" fill=\"black\">{{chart_6_name}}</text></svg>\r\n\r\n  <svg width=\"500\" height=\"400\" id=\"svg\" ><text x=\"250\" y=\"15\" fill=\"black\">{{chart_7_name}}</text></svg> \r\n\r\n\r\n\r\n</div>\r\n\r\n<!--<h2 style=\"text-align: center;\"> Real Time Chart for Divvy Station: <span style=\"color:blue\">{{stationNm}}</span></h2>-->\r\n","////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n/// This file and the source code provided can be used only for\n/// the projects and assignments of this course\n\n/// Last Edit by Dr. Atef Bader: 1/30/2019\n\n\n////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PlacesService } from '../../places.service';\n\n\n\n@Component({\n  selector: 'app-find',\n  templateUrl: './find.component.html',\n  styleUrls: ['./find.component.css']\n})\nexport class FindComponent implements OnInit {\n\n  createForm: UntypedFormGroup;\n  hintColor;\n  timeLimit;\n\n\n  constructor(private placesService: PlacesService, private fb: UntypedFormBuilder, private router: Router) {\n    this.hintColor = \"#76FF03\";\n\n    this.createForm = this.fb.group({\n      where: '',\n      find: ''\n\n    });\n  }\n\n\n\n  findPlaces(find, where) {\n\n\n    this.placesService.findPlaces(find, where).subscribe(() => {\n\n      this.router.navigate(['/list_of_places']);\n\n    });\n\n\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","<div>\n\n    <br>\n\n    <mat-card>\n\n\n      <mat-divider></mat-divider>\n      <br>\n      <form [formGroup]=\"createForm\" class=\"create-form\">\n\n\n\n                <mat-form-field class=\"field-full-width\">\n                    <mat-label color=blue> Find</mat-label>\n                    <input align=\"start\" matInput  formControlName=\"find\" #find>\n                    <mat-hint [ngStyle]=\"{color: hintColor}\">Restaurants, Bars, Cafe, ... </mat-hint>\n                  </mat-form-field>\n\n                  <br><br>\n\n                <mat-form-field  class=\"field-full-width\">\n                    <mat-label color=blue> Where</mat-label>\n                    <input align=\"start\" matInput  formControlName=\"where\" #where>\n                    <mat-hint [ngStyle]=\"{color: hintColor}\">Near me, ... </mat-hint>\n\n                  </mat-form-field>\n\n                  <br><br>\n\n                <mat-divider></mat-divider>\n                  <br><br>\n\n                <button type=\"submit\" (click)=\"findPlaces(find.value,  where.value)\"  mat-raised-button >\n                    Go\n                    &nbsp; &nbsp; &nbsp;\n                    <mat-icon>search</mat-icon>\n                </button>\n\n\n      </form>\n    </mat-card>\n  </div>\n","////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n/// This file and the source code provided can be used only for\n/// the projects and assignments of this course\n\n/// Last Edit by Dr. Atef Bader: 1/30/2019\n\n\n////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n\n\nimport { Component,Injectable, OnInit,Output, EventEmitter} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material/table';\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\nimport { Place } from '../../place';\nimport { PlacesService } from '../../places.service';\n\ninterface Location {\n  lat: number;\n  lng: number;\n  zoom: number;\n  address_level_1?:string;\n  address_level_2?: string;\n  address_country?: string;\n  address_zip?: string;\n  address_state?: string;\n  label: string;\n}\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n\n\n\n@Component({\n  selector: 'app-list-of-places',\n  templateUrl: './list-of-places.component.html',\n  styleUrls: ['./list-of-places.component.css']\n})\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ListOfPlacesComponent implements OnInit {\n\n  uri = 'http://localhost:4000';\n  selectedValue;\n  registerView;\n  circleRadius:number = 3000; // km\n\n  public location:Location = {\n    lat: 41.882607,\n    lng: -87.643548,\n    label: 'You are Here',\n    zoom: 13\n  };\n\n  icon = {\n      url: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png',\n      scaledSize: {\n        width: 60,\n        height: 60\n      }\n    }\n\n  places: Place[]=[];\n  name_of_place=\" \";\n  \n\n  displayedColumns = ['name', 'display_phone', 'address1', 'is_closed', 'rating','review_count', 'Divvy'];\n\n  constructor(private placesService: PlacesService, private router: Router, private http: HttpClient) { }\n\n\n  ngOnInit() {\n\n    this.fetchPlaces();\n\n  }\n\n\n\n  fetchPlaces() {\n    this.placesService\n      .getPlaces()\n      .subscribe((data: Place[]) => {\n        this.places = data;\n      });\n  }\n\n\n\n\n  findStations(placeName) {\n    this.name_of_place = placeName;\n\n\n    for (var i = 0,len = this.places.length; i < len; i++) {\n\n      if ( this.places[i].name === placeName ) { // strict equality test\n\n          var place_selected =  this.places[i];\n\n          break;\n      }\n    }\n\n    this.placesService.findStations(placeName).subscribe(() => {\n      this.router.navigate(['/list_of_stations']);\n    });\n\n  }\n\n\n}\n","<div>\n\n  <mat-card>\n    <button mat-raised-button color=\"primary\" routerLink=\"/find\" style=\"float: left;\" >\n          Home\n          &nbsp; &nbsp; &nbsp;\n          <mat-icon>home</mat-icon>\n        </button>\n        &nbsp; &nbsp; &nbsp;\n        <button mat-raised-button color=\"primary\" routerLink=\"/yelp_reviews_chart\" >\n              Yelp Reviews Chart\n              &nbsp; &nbsp; &nbsp;\n              <mat-icon>bar_chart</mat-icon>\n            </button>\n\n    <br><br>\n\n    <mat-divider></mat-divider>\n    <br>\n    <table mat-table [dataSource]=\"places\">\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Name</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"display_phone\">\n        <th mat-header-cell *matHeaderCellDef>Phone</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.display_phone}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"address1\">\n        <th mat-header-cell *matHeaderCellDef>Address</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.address1}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"is_closed\">\n        <th mat-header-cell *matHeaderCellDef>Closed</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.is_closed}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"rating\">\n        <th mat-header-cell *matHeaderCellDef>Rating</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.rating}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"review_count\">\n        <th mat-header-cell *matHeaderCellDef>Review Count</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.review_count}} </td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"Divvy\">\n        <th mat-header-cell *matHeaderCellDef class=\"mat-column-right\"></th>\n        <td mat-cell *matCellDef=\"let element\" class=\"mat-column-right\">\n          <button mat-raised-button color=\"primary\" (click)=\"findStations(element.name);\">Divvy Near by</button>\n        </td>\n      </ng-container>\n\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    </table>\n    \n\n  </mat-card>\n</div>\n","////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n/// This file and the source code provided can be used only for\n/// the projects and assignments of this course\n\n/// Last Edit by Dr. Atef Bader: 1/30/2019\n\n\n////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n\n\n\nimport { Component, OnInit ,Injectable} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { Station } from '../../station';\nimport { PlacesService } from '../../places.service';\n\n\nimport { Input, ViewChild, NgZone} from '@angular/core';\nimport { MapsAPILoader, AgmMap } from '@agm/core';\nimport { GoogleMapsAPIWrapper } from '@agm/core/services';\nimport { Place } from 'src/app/place';\n\n\nimport { RealTimeLineComponent } from '../../components/real-time-line-chart/real-time-line-chart.component'\nimport { RealTimeSMALineComponent } from '../../components/real-time-sma-line-chart/real-time-sma-line-chart.component';\n\n\n\n\ninterface Location {\n  lat: number;\n  lng: number;\n  zoom: number;\n  address_level_1?:string;\n  address_level_2?: string;\n  address_country?: string;\n  address_zip?: string;\n  address_state?: string;\n  label: string;\n}\n\n\n\n@Component({\n  selector: 'app-list-of-stations',\n  templateUrl: './list-of-stations.component.html',\n  styleUrls: ['./list-of-stations.component.css']\n})\n\n\n///////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////\n\nexport class ListOfStationsComponent implements OnInit {\n\n  stations: Station[];\n  markers: Station[];\n  placeSelected: Place;\n  timeLimit:string;\n\n  displayedColumns = ['id', 'stationName', 'availableBikes', 'availableDocks', 'is_renting', 'lastCommunicationTime', 'latitude',  'longitude', 'status', 'totalDocks','ChartData','smachart'];\n\n\n  icon = {\n    url: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png',\n    scaledSize: {\n      width: 60,\n      height: 60\n    }\n  }\n\n\n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n  constructor(private placesService: PlacesService, private router: Router) { }\n\n\n\n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n\n  ngOnInit() {\n    this.getPlaceSelected();\n    this.fetchStations();\n  }\n\n\n\n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n\n  fetchStations() {\n    this.placesService\n      .getStations()\n      .subscribe((data: Station[]) => {\n        this.stations = data;\n        this.markers = data;\n\n      });\n  }\n\n\n\n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n  getPlaceSelected() {\n    this.placesService\n      .getPlaceSelected()\n      .subscribe((data: Place) => {\n        this.placeSelected = data;\n\n      });\n  }\n\n\n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n\n  getDivvyDailyTripsChart() {\n\n    console.log('getting Divvy Trips chart')\n    this.router.navigate(['/divvy_trips_chart']);\n    \n  }\n\n\n\n  \n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n\n  getLineChart(stationName) {\n\n    this.placesService.stationNameSelected = stationName;\n    console.log(stationName);\n    this.timeLimit = \"1 HOUR\";\n\n    const realTimeLineChart = new RealTimeLineComponent(this.placesService);\n\n    this.router.navigate(['/realtime_line_chart']);\n\n    realTimeLineChart.create_d3_chart(stationName,this.placesService,this.timeLimit);\n\n  }\n\n   \n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n  getSMALineChart(stationName){\n\n    this.placesService.stationNameSelected = stationName;\n    console.log(stationName);\n    this.timeLimit = \"1 HOUR\";\n\n    const realTimeLineChart = new RealTimeLineComponent(this.placesService);\n\n    this.router.navigate(['/sma_chart']);\n\n    realTimeLineChart.create_d3_chart(stationName,this.placesService,this.timeLimit);\n\n\n  }\n  \n\n \n\n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n  clickedMarker(label: string, index: number) {\n\n    console.log(`clicked the marker: ${label || index}`)\n    \n  }\n\n\n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n  circleRadius:number = 3000; // km\n\n  public location:Location = {\n    lat: 41.882607,\n    lng: -87.643548,\n    label: 'You are Here',\n    zoom: 13\n  };\n\n\n\n}\n","<br>  <button mat-raised-button color=\"primary\" routerLink=\"/find\" style=\"position: absolute;top: 75px;margin-left:20px\" >\n        Home\n        &nbsp; &nbsp; &nbsp;\n        <mat-icon>home</mat-icon>\n      </button>\n    &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;\n    &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;\n  \n\n    <button mat-raised-button color=\"primary\" routerLink=\"/heat_map\" style=\"position: absolute;top: 75px;margin-left:140px;\">\n    Divvy Stations HeatMap\n    &nbsp; &nbsp; &nbsp;\n    <mat-icon>directions_bike</mat-icon>\n  </button>\n  &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;\n  &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;\n\n\n  <button mat-raised-button color=\"primary\" (click)=getDivvyDailyTripsChart() style=\"position: absolute;top: 75px;margin-left:140px;\">\n    Divvy Trips - Trends & Seasonality\n    &nbsp; &nbsp; &nbsp;\n    <mat-icon>trending_up</mat-icon>\n    </button>\n    &nbsp; &nbsp; &nbsp;\n\n\n\n\n    <button mat-raised-button color=\"primary\" routerLink=\"/list_of_places\" style=\"position: absolute;top: 75px;right: 20px;\">\n    Go Back\n    &nbsp; &nbsp; &nbsp;\n    <mat-icon>keyboard_backspace</mat-icon>\n  </button>\n\n\n    <br><br>\n    <mat-divider></mat-divider>\n    <br>\n    <table mat-table [dataSource]=\"stations\">\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>ID</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"stationName\">\n        <th mat-header-cell *matHeaderCellDef>stationName</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.stationName}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"availableBikes\">\n        <th mat-header-cell *matHeaderCellDef>availableBikes</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.availableBikes}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"availableDocks\">\n        <th mat-header-cell *matHeaderCellDef>availableDocks</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.availableDocks}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"is_renting\">\n        <th mat-header-cell *matHeaderCellDef>is_renting</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.is_renting}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"lastCommunicationTime\">\n        <th mat-header-cell *matHeaderCellDef>lastCommunicationTime </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.lastCommunicationTime}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"latitude\">\n        <th mat-header-cell *matHeaderCellDef>latitude</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.latitude}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"longitude\">\n        <th mat-header-cell *matHeaderCellDef>longitude</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.longitude}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef>status</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n      </ng-container>\n\n        <th mat-header-cell *matHeaderCellDef>totalDocks</th>\n      <ng-container matColumnDef=\"totalDocks\">\n        <th mat-header-cell *matHeaderCellDef>totalDocks</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.totalDocks}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"ChartData\">\n        <th mat-header-cell *matHeaderCellDef class=\"mat-column-right\"></th>\n        <td mat-cell *matCellDef=\"let element\" class=\"mat-column-right\">\n          <button mat-raised-button color=\"primary\" (click)=\"getLineChart(element.stationName);\">Real-Time Chart\n          <mat-icon>show_chart</mat-icon></button>\n\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"smachart\">\n        <th mat-header-cell *matHeaderCellDef class=\"mat-column-right\"></th>\n        <td mat-cell *matCellDef=\"let element\" class=\"mat-column-right\">\n          <button mat-raised-button color=\"primary\" (click)=\"getSMALineChart(element.stationName);\">SMA Chart\n          <mat-icon>show_chart</mat-icon></button>\n\n        </td>\n      </ng-container>\n\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    </table>\n\n\n\n\n<agm-map [(latitude)]=\"location.lat\" [(longitude)]=\"location.lng\" [(zoom)]=\"location.zoom\" [disableDefaultUI]=\"true\" [zoomControl]=\"true\" >\n\n  <!-- Possible icons to use -->\n  <!--  http://maps.google.com/mapfiles/ms/icons/green-dot.png   -->\n  <!--  http://maps.google.com/mapfiles/ms/icons/blue-dot.png    -->\n  <!--  http://maps.google.com/mapfiles/ms/icons/red-dot.png     -->\n\n\n  <!-- Google Maps Developer - Docs -->\n  <!--  https://developers.google.com/maps/documentation/   -->\n\n\n  <!-- Angular Google Maps - Docs -->\n  <!--  https://angular-maps.com/   -->\n\n\n\n  <!-- Angular Google Maps - Demo -->\n  <!--  https://stackblitz.com/edit/angular-google-maps-demo?file=app%2Fapp.module.ts   -->\n\n\n\n  <agm-marker\n  (markerClick)=\"clickedMarker('Union Station', 0)\"\n  [latitude]=\"location.lat\"\n  [longitude]=\"location.lng\"\n  [iconUrl]= \"icon\"\n  [label]=\"{ color: 'white', text: 'You are Here'}\">\n\n  <agm-info-window #infoWindow>\n    <strong>You are currently here by the Union Station</strong>\n\n  </agm-info-window>\n  </agm-marker>\n\n\n\n\n  <agm-marker\n  (markerClick)=\"clickedMarker('placeSelected', 0)\"\n  [latitude]=\"placeSelected.latitude\"\n  [longitude]=\"placeSelected.longitude\"\n  [iconUrl] = \"{ url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',\n                scaledSize: {\n                  width: 40,\n                  height: 60\n              }}\" >\n\n  <agm-info-window #infoWindow>\n    <strong>You have selected this place</strong>\n    <br><br><br>\n    <strong>Name: {{placeSelected.name}}</strong>\n    <br><br>\n    <strong>Phone: {{placeSelected.display_phone}}</strong>\n    <br><br>\n    <strong>Address: {{placeSelected.address1}}</strong>\n  </agm-info-window>\n  </agm-marker>\n\n\n\n\n\n  <agm-marker\n    *ngFor=\"let m of markers; let i = index\"\n    (markerClick)=\"clickedMarker(m.stationName, i)\"\n    [latitude]=\"m.latitude\"\n    [longitude]=\"m.longitude\"\n    [label]=\"m.id\">\n\n    <agm-info-window #infoWindow>\n      <strong>Divvy Station</strong>\n      <br><br>\n      <strong>stationName: {{m.stationName}}</strong>\n      <br><br>\n      <strong>status: {{m.status}}</strong>\n      <br><br>\n      <strong>availableDocks: {{m.availableDocks}}</strong>\n    </agm-info-window>\n\n\n  </agm-marker>\n\n\n\n\n  <agm-circle [latitude]=\"location.lat\" [longitude]=\"location.lng\"\n  [(radius)]=\"circleRadius\"\n  [fillColor]=\"'blue'\"\n  [circleDraggable]=\"true\"\n  [editable]=\"true\"></agm-circle>\n\n\n</agm-map>\n","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { Observable } from \"rxjs\";\r\nimport 'rxjs/add/observable/interval';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport * as d3 from 'd3';\r\nimport * as d3Scale from 'd3-scale';\r\nimport * as d3Shape from 'd3-shape';\r\nimport * as d3Array from 'd3-array';\r\nimport * as d3Axis from 'd3-axis';\r\nimport * as d3Time from 'd3-time-format';\r\n\r\nimport { Station } from '../../station';\r\nimport { Dock } from '../../dock';\r\n\r\nimport { PlacesService } from '../../places.service';\r\nimport { VERSION } from '@angular/material/core';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-real-time-line-chart',\r\n    encapsulation: ViewEncapsulation.None,\r\n    templateUrl: './real-time-line-chart.component.html',\r\n    styleUrls: ['./real-time-line-chart.component.css']\r\n})\r\n\r\n\r\nexport class RealTimeLineComponent implements OnInit {\r\n\r\n\r\n     private margin = {top: 50, right: 20, bottom: 30, left: 150};\r\n     private width: number;\r\n     docks: Dock[];\r\n     timeRangeSelected: string;\r\n\r\n     stationSelected:Station;\r\n     value:number;\r\n     SMALineChart:Subscription;\r\n     LineChart: Subscription;\r\n     stationNameSelected: string;\r\n     title: string;\r\n     padding = 1;\r\n\r\n\r\n     timeRanges = [\r\n        { id : '1 HOUR', value: 'Past Hour'},\r\n        { id : '24 HOUR', value: 'Last 24 Hours'},\r\n        { id : '7 DAY', value: 'Last 7 Days'}\r\n      ];\r\n\r\n     private height: number;\r\n     private x: any;\r\n     private y: any;\r\n     private svg: any;\r\n     private line: d3Shape.Line<[number, number]>;\r\n \r\n     private movingAverageLine1: d3Shape.Line<[number, number]>;\r\n     private movingAverageLine: d3Shape.Line<[number, number]>;\r\n     version = VERSION;\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n     constructor(private placesService: PlacesService) {\r\n         this.width = 900 - this.margin.left - this.margin.right;\r\n         this.height = 500 - this.margin.top - this.margin.bottom;\r\n     }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n     ngOnInit() {\r\n       if (this.SMALineChart !== undefined) {\r\n               this.SMALineChart.unsubscribe();\r\n           }\r\n         this.timeRangeSelected =\"1 HOUR\";\r\n         this.stationNameSelected = this.placesService.stationNameSelected;\r\n         this.title = 'Divvy Dock Station:    ' + this.stationNameSelected;\r\n         this.createPriodicTaskToPullStationDataFromServer();\r\n\r\n     }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    changeTimeRangeSelected(data){\r\n        this.build_d3_chart('#008000',0,this.timeRangeSelected);\r\n    }\r\n\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    createPriodicTaskToPullStationDataFromServer(){\r\n\r\n        if (this.SMALineChart !== undefined) {\r\n                this.SMALineChart.unsubscribe();\r\n        }\r\n\r\n        this.placesService.getStationSelected().subscribe((data: Station) => {\r\n          this.stationSelected = data;\r\n          this.LineChart = this.placesService.pulledNewStationDocksDataFromServer(this.placesService.stationNameSelected, this.timeRangeSelected).subscribe(res => {\r\n            this.create_d3_chart(this.placesService.stationNameSelected,this.placesService,this.timeRangeSelected);\r\n          });\r\n        });\r\n    }\r\n\r\n      \r\n    ///////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    build_d3_chart(color,value,type){\r\n      this.placesService.getStationSelected().subscribe((data: Station) => {\r\n           this.stationSelected = data;\r\n           this.create_d3_chart(this.stationSelected.stationName,this.placesService,this.timeRangeSelected);\r\n      });\r\n\r\n    }\r\n\r\n        \r\n    ///////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    create_d3_chart(stationName,placesService,timeRange) {\r\n      if (this.SMALineChart !== undefined) {\r\n               this.SMALineChart.unsubscribe();\r\n      }\r\n\r\n      this.stationNameSelected = stationName;\r\n      this.title = 'Divvy Dock Station:    ' + this.stationNameSelected;\r\n        \r\n      placesService.getStationDocksLog(stationName,timeRange).subscribe(() => {\r\n         this.fetchDocks(placesService,timeRange);\r\n      });\r\n    }\r\n\r\n\r\n        \r\n    ///////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    fetchDocks(placesService,timeRange) {\r\n\r\n         placesService\r\n           .getDocks()\r\n              .subscribe((data: Dock[]) => {\r\n                    this.docks = data;\r\n                    console.log(this.docks);\r\n                    this.updateChart();\r\n                    this.initSvg();\r\n                    this.initAxis();\r\n                    this.create_d3_chart_legend(timeRange);\r\n                    this.create_d3_chart_X_Y_Axis(timeRange);\r\n                    this.create_d3_line();\r\n              });\r\n    }\r\n\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    private initSvg() {\r\n         this.svg = d3.select('#svg')\r\n             .append('g')\r\n             .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')');\r\n    }\r\n\r\n    private initAxis() {\r\n         this.x = d3Scale.scaleTime().range([0, this.width]);\r\n         this.y = d3Scale.scaleLinear().range([this.height, 0]);\r\n\r\n         this.x.domain(d3Array.extent(this.docks, (d) => new Date(d.lastCommunicationTime.replace(/-/g,'/').toString() )));\r\n         this.y.domain([0, d3Array.max(this.docks, (d) => d.availableDocks)]);\r\n\r\n    }\r\n\r\n\r\n        \r\n    ///////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    private setTimeIncrementFor_X_Axis(timeRange){\r\n       if(timeRange==\"1 HOUR\"){\r\n            this.svg.append('g')\r\n            .attr('class', 'axis axis--x')\r\n            .attr('transform', 'translate(0,' + this.height + ')')\r\n            .call(d3Axis.axisBottom(this.x)\r\n            .ticks(d3.timeMinute.every(2)))\r\n            .selectAll(\"text\")\r\n            .attr(\"y\", 0)\r\n            .attr(\"x\", 9)\r\n            .attr(\"dy\", \".35em\")\r\n            .attr(\"transform\", \"rotate(45)\")\r\n            .style(\"text-anchor\", \"start\")\r\n       }\r\n       else if(timeRange==\"24 HOUR\"){\r\n                this.svg.append('g')\r\n                .attr('class', 'axis axis--x')\r\n                .attr('transform', 'translate(0,' + this.height + ')')\r\n                .call(d3Axis.axisBottom(this.x)\r\n                .ticks(d3.timeHour.every(1)))\r\n                .selectAll(\"text\")\r\n                .attr(\"y\", 0)\r\n                .attr(\"x\", 9)\r\n                .attr(\"dy\", \".35em\")\r\n                .attr(\"transform\", \"rotate(45)\")\r\n                .style(\"text-anchor\", \"start\")\r\n            }\r\n            else if(timeRange==\"7 DAY\"){\r\n\r\n                          this.svg.append('g')\r\n                          .attr('class', 'axis axis--x')\r\n                          .attr('transform', 'translate(0,' + this.height + ')')\r\n                          .call(d3Axis.axisBottom(this.x)\r\n                          .ticks(d3.timeHour.every(12)))\r\n                          .selectAll(\"text\")\r\n                          .attr(\"y\", 0)\r\n                          .attr(\"x\", 9)\r\n                          .attr(\"dy\", \".35em\")\r\n                          .attr(\"transform\", \"rotate(45)\")\r\n                          .style(\"text-anchor\", \"start\")\r\n\r\n                  }\r\n\r\n    }\r\n\r\n\r\n\r\n        \r\n    ///////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    private create_d3_chart_X_Y_Axis(timeRange) {\r\n\r\n        this.svg.append('g')\r\n             .attr('class', 'axis axis--x')\r\n             .attr('transform', 'translate(0,' + this.height + ')')\r\n             .append('text')\r\n             .attr('class', 'axis-title')\r\n             .attr('text-anchor', 'middle')\r\n             .attr('transform', 'translate(420,50)')\r\n             .text('Time');\r\n\r\n        this.setTimeIncrementFor_X_Axis(timeRange);\r\n\r\n        this.svg.append('g')\r\n             .attr('class', 'axis axis--y')\r\n             .call(d3Axis.axisLeft(this.y))\r\n             .append('text')\r\n             .attr('class', 'axis-title')\r\n             .attr(\"transform\", \"translate(\"+ 1 +\",\"+(this.height/2)+\")rotate(90)\")  \r\n             .attr('y', 35)\r\n             .attr('dy', '.71em')\r\n             .style('text-anchor', 'end')\r\n             .text('Available Docks');\r\n    }\r\n\r\n\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    private create_d3_line() {\r\n        this.line = d3Shape.line()\r\n             .x( (d: any) => this.x(new Date(d.lastCommunicationTime.replace(/-/g,'/').toString()) ))\r\n             .y( (d: any) => this.y(d.availableDocks) );\r\n        this.svg.append('path')\r\n             .datum(this.docks)\r\n             .attr('class', 'line')\r\n             .attr('d', this.line);\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    private create_d3_chart_legend(timeRange) {\r\n\r\n      var legend = this.svg.append('g')\r\n                              .attr(\"class\", \"legend\")\r\n                              .attr(\"x\", 15)\r\n                              .attr(\"y\", 5)\r\n                              .attr('transform','translate(860,5)')\r\n                              .attr(\"width\", 18)\r\n                              .attr(\"height\", 10)\r\n\r\n      if(timeRange == \"1 HOUR\") {\r\n              legend.append(\"rect\")\r\n                        .attr(\"class\", \"legend\")\r\n                        .attr(\"x\", 1)\r\n                        .attr(\"y\", 5)\r\n                        .attr(\"width\", 15)\r\n                        .attr(\"height\", 7)\r\n                        .style(\"fill\", 'green');\r\n\r\n              legend.append(\"text\")\r\n                        .attr(\"class\", \"legendTxt\")\r\n                        .style(\"font-size\", \"13px\")\r\n                        .attr(\"x\", 20)\r\n                        .attr(\"y\", 5)\r\n                        .attr(\"dy\", \"10px\")\r\n                        .style(\"text-anchor\", \"start\")\r\n                        .text(\"Real-Time Data\" );\r\n      }\r\n      else if(timeRange == \"24 HOUR\") {\r\n                  legend.append(\"rect\")\r\n                            .attr(\"class\", \"legend\")\r\n                            .attr(\"x\", 1)\r\n                            .attr(\"y\", 5)\r\n                            .attr(\"width\", 15)\r\n                            .attr(\"height\", 7)\r\n                            .style(\"fill\", 'green');\r\n\r\n                  legend.append(\"text\")\r\n                            .attr(\"class\", \"legendTxt\")\r\n                            .style(\"font-size\", \"13px\")\r\n                            .attr(\"x\", 20)\r\n                            .attr(\"y\", 5)\r\n                            .attr(\"dy\", \"10px\")\r\n                            .style(\"text-anchor\", \"start\")\r\n                            .text(\"Real-Time Data\");\r\n            }\r\n            else if(timeRange == \"7 DAY\") {\r\n                          legend.append(\"rect\")\r\n                                    .attr(\"class\", \"legend\")\r\n                                    .attr(\"x\", 1)\r\n                                    .attr(\"y\", 5)\r\n                                    .attr(\"width\", 15)\r\n                                    .attr(\"height\", 7)\r\n                                    .style(\"fill\", 'green');\r\n\r\n                          legend.append(\"text\")\r\n                                    .attr(\"class\", \"legendTxt\")\r\n                                    .style(\"font-size\", \"13px\")\r\n                                    .attr(\"x\", 20)\r\n                                    .attr(\"y\", 5)\r\n                                    .attr(\"dy\", \"10px\")\r\n                                    .style(\"text-anchor\", \"start\")\r\n                                    .text(\"Real-Time Data\");\r\n                  }\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    private updateChart(){\r\n\r\n       var chart = d3.select('#svg').select(\"g\").remove().exit();\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n    ngOnDestroy() {\r\n\r\n      if (this.LineChart !== undefined) {\r\n              this.LineChart.unsubscribe();\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","<!--<mat-checkbox class=\"checkbox-inner-container\" >SMA for 1 hr</mat-checkbox>--<!--(change)=\"OnChange($event)\"\r\n[(checked)]=\"IsChecked\" -->\r\n<div>\r\n    <br>&nbsp; &nbsp; &nbsp;\r\n    <button mat-raised-button color=\"primary\" routerLink=\"/find\" style=\"position: absolute;top: 75px;\">\r\n        Home\r\n        &nbsp;&nbsp; &nbsp;\r\n        <mat-icon>home</mat-icon>\r\n\r\n    </button>&nbsp; &nbsp; &nbsp;\r\n    <br><br>\r\n\r\n<mat-card>\r\n\r\n<div style=\"margin-left: 27px;\r\n    text-align: left;\r\n    margin-top: 17px;\">\r\n\r\n  <mat-form-field>\r\n\r\n\r\n     <mat-select placeholder=\"Time Range:\"  [(ngModel)]=\"timeRangeSelected\" (ngModelChange)=\"changeTimeRangeSelected($event.value)\">\r\n       <mat-option *ngFor=\"let timeRange of timeRanges\" [value]=\"timeRange.id\">\r\n         {{timeRange.value}}\r\n       </mat-option>\r\n     </mat-select>\r\n\r\n  </mat-form-field>&nbsp; &nbsp; &nbsp;\r\n\r\n\r\n    </div>\r\n    </mat-card>\r\n\r\n    <button style=\"position: absolute;top: 75px;right: 20px;\" mat-raised-button  color=\"primary\"\r\n        routerLink=\"/list_of_stations\">\r\n        <span> Go Back</span>\r\n        &nbsp;&nbsp; &nbsp;\r\n        <mat-icon>keyboard_backspace</mat-icon>\r\n    </button>\r\n    <h4 style=\"margin-left: 27px;\">{{title}}</h4>\r\n    <svg width=\"1200\" height=\"700\" id=\"svg\"></svg>\r\n\r\n</div>\r\n\r\n<!--<h2 style=\"text-align: center;\"> Real Time Chart for Divvy Station: <span style=\"color:blue\">{{stationNm}}</span></h2>-->\r\n","import {\r\n    Component,\r\n    ViewEncapsulation,\r\n    OnInit\r\n} from '@angular/core';\r\nimport {\r\n    Observable\r\n} from \"rxjs\";\r\nimport 'rxjs/add/observable/interval';\r\nimport {\r\n    Subscription\r\n} from 'rxjs/Subscription';\r\n\r\nimport * as d3 from 'd3';\r\nimport * as d3Scale from 'd3-scale';\r\nimport * as d3Shape from 'd3-shape';\r\nimport * as d3Array from 'd3-array';\r\nimport * as d3Axis from 'd3-axis';\r\nimport * as d3Time from 'd3-time-format';\r\n\r\nimport {\r\n    Station\r\n} from '../../station';\r\nimport {\r\n    Dock\r\n} from '../../dock';\r\n\r\nimport {\r\n    PlacesService\r\n} from '../../places.service';\r\nimport {\r\n    VERSION\r\n} from '@angular/material/core';\r\n\r\n@Component({\r\n    selector: 'app-real-time-sma-line-chart',\r\n    encapsulation: ViewEncapsulation.None,\r\n    templateUrl: './real-time-sma-line-chart.component.html',\r\n    styleUrls: ['./real-time-sma-line-chart.component.css']\r\n})\r\n\r\n\r\n\r\nexport class RealTimeSMALineComponent implements OnInit {\r\n\r\n    /////////////////////////////////////////////////////\r\n    /////////////////////////////////////////////////////\r\n\r\n\r\n    /////////////     ADD YOUR CODE HERE      ///////////\r\n\r\n    // Write your code SIMILAR to real-time-chart component\r\n    // real-time-sma-line-chart.component.html MUST BE UPDATED as well\r\n    // Update list-of-stations.component.ts by adding somtehing similar to getLineChart(stationName)\r\n    // Update list-of-stations.component.html by adding somtehingsimilar to (click)=\"getLineChart(element.stationName)\r\n\r\n\r\n    /////////////////////////////////////////////////////\r\n    /////////////////////////////////////////////////////\r\n    \r\n\r\n    \r\n    ngOnInit() {\r\n     \r\n\r\n    }\r\n\r\n\r\n}","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { Place } from '../../place';\nimport { PlacesService } from '../../places.service';\n\nimport * as d3 from 'd3-selection';\nimport * as d3Scale from 'd3-scale';\nimport * as d3Array from 'd3-array';\nimport * as d3Axis from 'd3-axis';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './yelp-reviews-bar-chart.component.html',\n  styleUrls: ['./yelp-reviews-bar-chart.component.css']\n})\n\n\n\n\n        \n///////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////\n\n\nexport class BarChartComponent implements OnInit {\n\n  title = \"Yelp Reviews Chart\";\n  private places: Place[];\n  private width: number;\n  private height: number;\n  private margin = {top: 20, right: 20, bottom: 150, left: 80};\n\n  private x: any;\n  private y: any;\n  private svg: any;\n  private g: any;\n\n  \n        \n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n\n  constructor(private placesService: PlacesService) {}\n\n\n        \n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n\n  ngOnInit() {\n      this.fetchPlaces();\n\n  }\n\n  \n         \n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n \n  fetchPlaces() {\n    this.placesService\n      .getPlaces()\n      .subscribe((data: Place[]) => {\n        this.places = data;\n        let list_of_names = [];\n        let list_of_places = [];\n        for(let i=0; i<this.places.length;i++){\n            let name = this.places[i].name;\n            let review_count = this.places[i].review_count;\n            if (list_of_names.includes(name)){\n                name = ' '+name;\n            }\n            list_of_names.push(name);\n            list_of_places.push({name:name,review_count:review_count});\n        }\n        this.places = list_of_places;\n        console.log(this.places);\n        this.initSvg();\n        this.init_X_Y_Axis();\n        this.create_X_Y_Axis();\n        this.createBarChart(this.places);\n      });\n  }\n\n\n        \n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n\n  private initSvg() {\n\n      this.svg = d3.select('svg');\n      this.width = +this.svg.attr('width') - this.margin.left - this.margin.right;\n      this.height = +this.svg.attr('height') - this.margin.top - this.margin.bottom;\n      this.g = this.svg.append('g')\n                          .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')');\n  }\n\n\n        \n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n\n  private init_X_Y_Axis() {\n    this.x = d3Scale.scaleBand().rangeRound([0, this.width]).padding(.800);\n    this.y = d3Scale.scaleLinear().rangeRound([this.height, .099]);\n    this.x.domain(this.places.map((d) => d.name));\n    this.y.domain([0, d3Array.max(this.places, (d) => Number(d.review_count))]);\n  }\n\n\n        \n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n\n  private create_X_Y_Axis() {\n\n    this.g.append('g')\n                .attr('class', 'axis axis--x')\n                .attr('transform', 'translate(0,' + this.height + ')')\n                .call(d3Axis.axisBottom(this.x))\n                .selectAll(\"text\")\n                .attr(\"y\", 0)\n                .attr(\"x\", 9)\n                .attr(\"dy\", \".35em\")\n                .attr(\"transform\", \"rotate(60)\")\n                .style(\"text-anchor\", \"start\");\n\n    this.g.append('g')\n                .attr('class', 'axis axis--y')\n                .call(d3Axis.axisLeft(this.y))\n                .append(\"text\")\n                .attr(\"transform\", \"rotate(90)\")\n                .attr(\"y\", 6)\n                .attr(\"dy\", \"0.71em\")\n                .attr(\"text-anchor\", \"end\")\n                .text(\"Frequency\");\n\n    this.svg.append(\"text\")\n                .attr(\"x\", this.width / 2 + 80)\n                .attr(\"y\", this.height + 85)\n                .style(\"text-anchor\", \"middle\")\n                .text(\"Name\");\n\n    this.svg.append(\"text\")\n                .attr(\"transform\", \"rotate(-90)\")\n                .attr(\"y\", 15)\n                .attr(\"x\", 0 - (this.height / 2))\n                .style(\"text-anchor\", \"middle\")\n                .text(\"Review Count\");\n\n  }\n\n\n        \n  ///////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////\n\n\n  private createBarChart(data){\n    //select all bars on the graph, take them out, and exit the previous data set.\n    //then you can add/enter the new data set\n    var bars = this.g.selectAll(\".bar\")\n                          .remove()\n                          .exit()\n                          .data(data)\n\n    //now actually give each rectangle the corresponding data\n    bars.enter().append('rect')\n                    .attr('class', 'bar')\n                    .attr('x', (d) => this.x(d.name) )\n                    .attr('y', (d) => this.y(d.review_count) )\n                    .attr('width', this.x.bandwidth())\n                    .attr('height', (d) => this.height - this.y(d.review_count) );\n  }\n\n}\n","<br>\n<mat-card >\n\n<button mat-raised-button color=\"primary\" routerLink=\"/list_of_places\" style=\"float: right;margin-right:20px;\" >\n      Go Back\n      &nbsp; &nbsp; &nbsp;\n      <mat-icon>keyboard_backspace</mat-icon>\n</button>\n\n<br>\n<h2>{{ title }}</h2>\n<svg width=\"1000\" height=\"600\"></svg>\n</mat-card>\n","\n////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n/// This file and the source code provided can be used only for\n/// the projects and assignments of this course\n\n/// Last Edit by Dr. Atef Bader: 1/30/2019\n\n\n////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HttpHeaders } from '@angular/common/http';\n\n\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\nimport { Place } from './place';\nimport { Station } from './station';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlacesService {\n\n  uri = 'http://localhost:4000';\n  Emmiter;\n  time_interval;\n  stationNameSelected = 'None';\n\n  \n  constructor(private http: HttpClient) {\n\n\n  }\n\n\n  getPlaces() : Observable<Place[]> {\n    return this.http.get<Place[]>(`${this.uri}/places`);\n  }\n\n\n  getPlaceSelected() {\n    return this.http.get(`${this.uri}/place_selected`);\n  }\n  getStationSelected() {\n    return this.http.get(`${this.uri}/station_selected`);\n  }\n\n\n  getStations() {\n    return this.http.get(`${this.uri}/stations`);\n  }\n\n  getDocks() {\n    return this.http.get(`${this.uri}/docks`);\n  }\n\n  getDocksSME(){\n    return this.http.get(`${this.uri}/docksSME`);\n  }\n\n\n\n\n\n////////////////////////////////////////////////////////////////////////////////////\n///                                                                              ///\n///   This function will get all Divvy stations data from the App server         ///\n///    The app server collects Divvy Logs that are stored on ElasticSearch       ///                              ///\n///                                                                              ///\n////////////////////////////////////////////////////////////////////////////////////\n\n  get_all_divvy_stations_data(timeRange, newTimeRangeSelection){\n    const find_stations_at = {\n\n      timeRange:timeRange,\n      newTimeRangeSelection: newTimeRangeSelection\n\n    };\n\n    var str = JSON.stringify(find_stations_at, null, 2);\n\n\n    return this.http.post(`${this.uri}/stations/fetch_all_divvy_stations_data`, find_stations_at, httpOptions);\n\n  }\n\n\n\n\n  findPlaces(find, where) {\n    const find_places_at = {\n      find: find,\n      where: where\n    };\n\n    return this.http.post(`${this.uri}/places/find`, find_places_at, httpOptions);\n\n  }\n\n\n\n\n  findStations(placeName) {\n    const find_stations_at = {\n      placeName: placeName\n    };\n\n    var str = JSON.stringify(find_stations_at, null, 2);\n\n\n    return this.http.post(`${this.uri}/stations/find`, find_stations_at, httpOptions);\n\n  }\n  \n  getStationDocksLog(placeName,timeRange) {\n    const find_stations_at = {\n      placeName: placeName,\n      timeRange:timeRange\n    };\n\n    var str = JSON.stringify(find_stations_at, null, 2);\n\n    return this.http.post(`${this.uri}/stations/getdocks`, find_stations_at, httpOptions);\n\n  }\n\n\n\n  pulledNewStationDocksDataFromServer = (stationName, timeRange): Observable<Station[]> => {\n\n    return Observable.create(observer => {\n      this.Emmiter = observer;\n      this.time_interval = setInterval(() => {\n        observer.next({\n\n         getStationDocksLog(placeName,timeRange) {\n           const find_stations_at = {\n             placeName: placeName,\n             timeRange:timeRange\n           };\n\n           var str = JSON.stringify(find_stations_at, null, 2);\n\n           return this.http.post(`${this.uri}/stations/getdocks`, find_stations_at, httpOptions);\n\n         }\n         });\n    }, 30000);\n    });\n  }\n\n\n    destroy(){\n      if(this.time_interval){\n        clearInterval(this.time_interval);\n      }\n      if(this.Emmiter){\n        this.Emmiter.complete();\n      }\n    }\n\n\n\n    ///////////////////////////////////////////////////////////////////\n\n    getDivvyTripsCountsPerDay(day,selectedDate){\n      const find_stations_at = {\n        day: day,\n        selectedDate:selectedDate\n      };\n  \n      var str = JSON.stringify(find_stations_at, null, 2);\n  \n  \n      return this.http.post(`${this.uri}/countDivvyTripsPerDay`, find_stations_at, httpOptions);\n    }\n\n\n\n    getDivvyTripsCountsForSunday() {\n      return this.http.get(`${this.uri}/getDivvyTripsCountsSunday`);\n    }\n    getDivvyTripsCountsForMonday() {\n      return this.http.get(`${this.uri}/getDivvyTripsCountsForMonday`);\n    }\n    getDivvyTripsCountsForTuesday() {\n      return this.http.get(`${this.uri}/getDivvyTripsCountsForTuesday`);\n    }\n    getDivvyTripsCountsForWednesday() {\n      return this.http.get(`${this.uri}/getDivvyTripsCountsForWednesday`);\n    }\n    getDivvyTripsCountsForThursday() {\n      return this.http.get(`${this.uri}/getDivvyTripsCountsForThursday`);\n    }\n    getDivvyTripsCountsForFriday() {\n      return this.http.get(`${this.uri}/getDivvyTripsCountsForFriday`);\n    }\n    getDivvyTripsCountsForSaturday() {\n      return this.http.get(`${this.uri}/getDivvyTripsCountsForSaturday`);\n    }\n\n    \n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","var map = {\n\t\"./af\": 58685,\n\t\"./af.js\": 58685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 32614,\n\t\"./ar-kw.js\": 32614,\n\t\"./ar-ly\": 18630,\n\t\"./ar-ly.js\": 18630,\n\t\"./ar-ma\": 28674,\n\t\"./ar-ma.js\": 28674,\n\t\"./ar-sa\": 49032,\n\t\"./ar-sa.js\": 49032,\n\t\"./ar-tn\": 24730,\n\t\"./ar-tn.js\": 24730,\n\t\"./ar.js\": 254,\n\t\"./az\": 53052,\n\t\"./az.js\": 53052,\n\t\"./be\": 60150,\n\t\"./be.js\": 60150,\n\t\"./bg\": 63069,\n\t\"./bg.js\": 63069,\n\t\"./bm\": 13466,\n\t\"./bm.js\": 13466,\n\t\"./bn\": 18516,\n\t\"./bn-bd\": 90557,\n\t\"./bn-bd.js\": 90557,\n\t\"./bn.js\": 18516,\n\t\"./bo\": 26273,\n\t\"./bo.js\": 26273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 19815,\n\t\"./bs.js\": 19815,\n\t\"./ca\": 83331,\n\t\"./ca.js\": 83331,\n\t\"./cs\": 21320,\n\t\"./cs.js\": 21320,\n\t\"./cv\": 72219,\n\t\"./cv.js\": 72219,\n\t\"./cy\": 68266,\n\t\"./cy.js\": 68266,\n\t\"./da\": 66427,\n\t\"./da.js\": 66427,\n\t\"./de\": 67435,\n\t\"./de-at\": 52871,\n\t\"./de-at.js\": 52871,\n\t\"./de-ch\": 12994,\n\t\"./de-ch.js\": 12994,\n\t\"./de.js\": 67435,\n\t\"./dv\": 82357,\n\t\"./dv.js\": 82357,\n\t\"./el\": 95649,\n\t\"./el.js\": 95649,\n\t\"./en-au\": 59961,\n\t\"./en-au.js\": 59961,\n\t\"./en-ca\": 19878,\n\t\"./en-ca.js\": 19878,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 70864,\n\t\"./en-ie.js\": 70864,\n\t\"./en-il\": 91579,\n\t\"./en-il.js\": 91579,\n\t\"./en-in\": 30940,\n\t\"./en-in.js\": 30940,\n\t\"./en-nz\": 16181,\n\t\"./en-nz.js\": 16181,\n\t\"./en-sg\": 44301,\n\t\"./en-sg.js\": 44301,\n\t\"./eo\": 85291,\n\t\"./eo.js\": 85291,\n\t\"./es\": 54529,\n\t\"./es-do\": 53764,\n\t\"./es-do.js\": 53764,\n\t\"./es-mx\": 12584,\n\t\"./es-mx.js\": 12584,\n\t\"./es-us\": 86494,\n\t\"./es-us.js\": 86494,\n\t\"./es.js\": 54529,\n\t\"./et\": 35203,\n\t\"./et.js\": 35203,\n\t\"./eu\": 70678,\n\t\"./eu.js\": 70678,\n\t\"./fa\": 83483,\n\t\"./fa.js\": 83483,\n\t\"./fi\": 96262,\n\t\"./fi.js\": 96262,\n\t\"./fil\": 52521,\n\t\"./fil.js\": 52521,\n\t\"./fo\": 34555,\n\t\"./fo.js\": 34555,\n\t\"./fr\": 63131,\n\t\"./fr-ca\": 88239,\n\t\"./fr-ca.js\": 88239,\n\t\"./fr-ch\": 21702,\n\t\"./fr-ch.js\": 21702,\n\t\"./fr.js\": 63131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 23821,\n\t\"./ga.js\": 23821,\n\t\"./gd\": 71753,\n\t\"./gd.js\": 71753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 92762,\n\t\"./gom-deva.js\": 92762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 82809,\n\t\"./gu.js\": 82809,\n\t\"./he\": 45402,\n\t\"./he.js\": 45402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 10410,\n\t\"./hr.js\": 10410,\n\t\"./hu\": 38288,\n\t\"./hu.js\": 38288,\n\t\"./hy-am\": 67928,\n\t\"./hy-am.js\": 67928,\n\t\"./id\": 71334,\n\t\"./id.js\": 71334,\n\t\"./is\": 86959,\n\t\"./is.js\": 86959,\n\t\"./it\": 34864,\n\t\"./it-ch\": 51124,\n\t\"./it-ch.js\": 51124,\n\t\"./it.js\": 34864,\n\t\"./ja\": 36141,\n\t\"./ja.js\": 36141,\n\t\"./jv\": 29187,\n\t\"./jv.js\": 29187,\n\t\"./ka\": 42136,\n\t\"./ka.js\": 42136,\n\t\"./kk\": 94332,\n\t\"./kk.js\": 94332,\n\t\"./km\": 18607,\n\t\"./km.js\": 18607,\n\t\"./kn\": 84305,\n\t\"./kn.js\": 84305,\n\t\"./ko\": 70234,\n\t\"./ko.js\": 70234,\n\t\"./ku\": 16003,\n\t\"./ku.js\": 16003,\n\t\"./ky\": 75061,\n\t\"./ky.js\": 75061,\n\t\"./lb\": 32786,\n\t\"./lb.js\": 32786,\n\t\"./lo\": 66183,\n\t\"./lo.js\": 66183,\n\t\"./lt\": 50029,\n\t\"./lt.js\": 50029,\n\t\"./lv\": 24169,\n\t\"./lv.js\": 24169,\n\t\"./me\": 68577,\n\t\"./me.js\": 68577,\n\t\"./mi\": 68177,\n\t\"./mi.js\": 68177,\n\t\"./mk\": 50337,\n\t\"./mk.js\": 50337,\n\t\"./ml\": 65260,\n\t\"./ml.js\": 65260,\n\t\"./mn\": 52325,\n\t\"./mn.js\": 52325,\n\t\"./mr\": 14695,\n\t\"./mr.js\": 14695,\n\t\"./ms\": 75334,\n\t\"./ms-my\": 37151,\n\t\"./ms-my.js\": 37151,\n\t\"./ms.js\": 75334,\n\t\"./mt\": 63570,\n\t\"./mt.js\": 63570,\n\t\"./my\": 97963,\n\t\"./my.js\": 97963,\n\t\"./nb\": 88028,\n\t\"./nb.js\": 88028,\n\t\"./ne\": 86638,\n\t\"./ne.js\": 86638,\n\t\"./nl\": 50302,\n\t\"./nl-be\": 66782,\n\t\"./nl-be.js\": 66782,\n\t\"./nl.js\": 50302,\n\t\"./nn\": 33501,\n\t\"./nn.js\": 33501,\n\t\"./oc-lnc\": 50563,\n\t\"./oc-lnc.js\": 50563,\n\t\"./pa-in\": 50869,\n\t\"./pa-in.js\": 50869,\n\t\"./pl\": 65302,\n\t\"./pl.js\": 65302,\n\t\"./pt\": 49687,\n\t\"./pt-br\": 74884,\n\t\"./pt-br.js\": 74884,\n\t\"./pt.js\": 49687,\n\t\"./ro\": 79107,\n\t\"./ro.js\": 79107,\n\t\"./ru\": 33627,\n\t\"./ru.js\": 33627,\n\t\"./sd\": 30355,\n\t\"./sd.js\": 30355,\n\t\"./se\": 83427,\n\t\"./se.js\": 83427,\n\t\"./si\": 11848,\n\t\"./si.js\": 11848,\n\t\"./sk\": 54590,\n\t\"./sk.js\": 54590,\n\t\"./sl\": 20184,\n\t\"./sl.js\": 20184,\n\t\"./sq\": 56361,\n\t\"./sq.js\": 56361,\n\t\"./sr\": 78965,\n\t\"./sr-cyrl\": 81287,\n\t\"./sr-cyrl.js\": 81287,\n\t\"./sr.js\": 78965,\n\t\"./ss\": 25456,\n\t\"./ss.js\": 25456,\n\t\"./sv\": 70451,\n\t\"./sv.js\": 70451,\n\t\"./sw\": 77558,\n\t\"./sw.js\": 77558,\n\t\"./ta\": 51356,\n\t\"./ta.js\": 51356,\n\t\"./te\": 73693,\n\t\"./te.js\": 73693,\n\t\"./tet\": 21243,\n\t\"./tet.js\": 21243,\n\t\"./tg\": 42500,\n\t\"./tg.js\": 42500,\n\t\"./th\": 55768,\n\t\"./th.js\": 55768,\n\t\"./tk\": 77761,\n\t\"./tk.js\": 77761,\n\t\"./tl-ph\": 35780,\n\t\"./tl-ph.js\": 35780,\n\t\"./tlh\": 29590,\n\t\"./tlh.js\": 29590,\n\t\"./tr\": 33807,\n\t\"./tr.js\": 33807,\n\t\"./tzl\": 93857,\n\t\"./tzl.js\": 93857,\n\t\"./tzm\": 60654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 60654,\n\t\"./ug-cn\": 30845,\n\t\"./ug-cn.js\": 30845,\n\t\"./uk\": 19232,\n\t\"./uk.js\": 19232,\n\t\"./ur\": 47052,\n\t\"./ur.js\": 47052,\n\t\"./uz\": 77967,\n\t\"./uz-latn\": 32233,\n\t\"./uz-latn.js\": 32233,\n\t\"./uz.js\": 77967,\n\t\"./vi\": 98615,\n\t\"./vi.js\": 98615,\n\t\"./x-pseudo\": 12320,\n\t\"./x-pseudo.js\": 12320,\n\t\"./yo\": 31313,\n\t\"./yo.js\": 31313,\n\t\"./zh-cn\": 64490,\n\t\"./zh-cn.js\": 64490,\n\t\"./zh-hk\": 55910,\n\t\"./zh-hk.js\": 55910,\n\t\"./zh-mo\": 98262,\n\t\"./zh-mo.js\": 98262,\n\t\"./zh-tw\": 44223,\n\t\"./zh-tw.js\": 44223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[21]}